Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

A subarray is a contiguous non-empty sequence of elements within an array.

 

Example 1:

Input: nums = [1,1,1], k = 2
Output: 2
Example 2:

Input: nums = [1,2,3], k = 3
Output: 2
 

Constraints:

1 <= nums.length <= 2 * 104
-1000 <= nums[i] <= 1000
-107 <= k <= 107

class Solution:
    def subarraySum(self, nums: List[int], k: int) -> int:
        prefixsum=c=0
        d=dict()
        d[0]=1 #For the condition when prefixsum = k
        for i in nums:
            prefixsum+=i
            if prefixsum-k in d:
                c+=d[prefixsum-k]
            if prefixsum in d:
                d[prefixsum]+=1
            else:
                d[prefixsum]=1
        return c 
        
